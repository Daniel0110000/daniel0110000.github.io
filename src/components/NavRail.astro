---
import "../styles/nav_rail.css"
import NavRailItem from "./NavRailItem.astro"
import ThemeModeItem from "./ThemeToggle.astro"
---

<div class="nav_rail_container" x-data="navRail">
    <nav class="nav_rail">
        <div class="nav_profile_info_container">
            <img src="/images/tmp_avatar.jpg" class="profile_img"/>
            <div class="profile_description_content">
                <p class="profile_name">Daniel Blas</p>
                <p class="profile_description">Android Developer</p>
            </div>
        </div>

        <div class="nav_item_divider"></div>

        <NavRailItem iconPath="/images/ic_about_me.svg" label="About Me" sectionToScroll="about_me_section_id"/>
        <NavRailItem iconPath="/images/ic_experience.svg" label="Experience" sectionToScroll="experience_section_id"/>
        <NavRailItem iconPath="/images/ic_skills.svg" label="Skills" sectionToScroll="skills_section_id"/>
        <NavRailItem iconPath="/images/ic_projects.svg" label="Projects" sectionToScroll="projects_section_id"/>
        <NavRailItem iconPath="/images/ic_contact.svg" label="Contact" sectionToScroll="contact_section_id"/>

        <ThemeModeItem/>

        <div class="nav_item_divider"></div>

        <img src="/images/ic_dr10.svg" class="nav_logo"/>

    </nav>
</div>

<script>

import Alpine from "alpinejs";

class NavRail {

    constructor(){ this.init(); }

    init() {
        document.addEventListener("alpine:init", () => {
            Alpine.data("navRail", () => ({
                selectedSection: "about_me_section_id",
                init() {
                    const sections = ["about_me_section_id", "experience_section_id", "skills_section_id", "projects_section_id", "contact_section_id"]

                    const observerOptions = {
                        root: null,
                        rootMargin: '-50% 0px -50% 0px',
                        threshold: 0
                    }

                    const observer = new IntersectionObserver((entries) => {
                        entries.forEach(entry => {
                            if (entry.isIntersecting) {                            
                                this.selectedSection = entry.target.id;
                            }
                        });
                    }, observerOptions);

                    sections.forEach(sectionId => {
                        const element = document.getElementById(sectionId);
                        if (element) {
                            observer.observe(element);
                        }
                    });
                },
                scrollToSection(sectionId: string) {
                    const element = document.getElementById(sectionId);

                    if (!element) { return }

                    if (sectionId === "about_me_section_id") {
                        window.scrollTo({
                            top: 0,
                            behavior: "auto"
                        })
                    } else {
                        const elementPosition = element.getBoundingClientRect().top + window.pageYOffset - 70
                        window.scrollTo({
                            top: elementPosition,
                            behavior: "auto"
                        })
                    }
                }
            }));
        });
    }
}

new NavRail();

</script>